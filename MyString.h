//****************************************************************************
//
//                                    MyString
//
//****************************************************************************



#ifndef __MyString_H__
#define __MyString_H__


// ===========================================================================
//                                  Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>



// ===========================================================================
//                                Project Files
// ===========================================================================




// ===========================================================================
//                              Class declarations
// ===========================================================================






class MyString
{
  public :
    
    // =======================================================================
    //                                 Enums
    // =======================================================================
    
    // =======================================================================
    //                               Constructors
    // =======================================================================
    MyString(void);

    MyString(const MyString&);

    // =======================================================================
    //                                Destructor
    // =======================================================================
    ~MyString(void);

    // =======================================================================
    //                            Accessors: getters
    // =======================================================================
  
    inline int size(void);

    // =======================================================================
    //                            Accessors: setters
    // =======================================================================

    // =======================================================================
    //                                Operators
    // =======================================================================

    // =======================================================================
    //                              Public Methods
    // =======================================================================

    char* c_str(void);
    


    // =======================================================================
    //                             Public Attributes
    // =======================================================================





  protected :

    // =======================================================================
    //                            Forbidden Constructors
    // =======================================================================
    /*MyString
MyString(void)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/
    /*MyString(const MyString &model)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/


    // =======================================================================
    //                              Protected Methods
    // =======================================================================

    // =======================================================================
    //                             Protected Attributes
    // =======================================================================
    const float MAX_SIZE = 100;
    int chars_length;
    int mem_length;
    char* chars;

};


// ===========================================================================
//                              Getters' definitions
// ===========================================================================

    int MyString::size (void)
    {
        return chars_length;
    }


// ===========================================================================
//                              Setters' definitions
// ===========================================================================

// ===========================================================================
//                             Operators' definitions
// ===========================================================================

// ===========================================================================
//                          Inline functions' definition
// ===========================================================================


#endif // __MyString_H__

