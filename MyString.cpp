//****************************************************************************
//
//                                    MyString
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>
#include <cstring>


// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "MyString.h"




//############################################################################
//                                                                           #
//                              Class    MyString                            #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================

MyString::MyString(void)
{
}


MyString::MyString (const MyString& str)
{
	mem_length = str.mem_length;
	chars_length = str.chars_length;
	chars = new char [mem_length];
	memcpy(chars, str.chars, mem_length*sizeof(*chars));

}


// ===========================================================================
//                                  Destructor
// ===========================================================================

MyString::~MyString(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================

char* MyString::c_str (void)
{

	char* output = new char [1+chars_length];
	int i;
	for (i=0 ; i<chars_length ; i++)
	{
		output[i] = chars[i];
	}
	output[chars_length] = '\0';
	return output;
}


void MyString::clear (void)
{
	delete(chars);
	mem_length = 0;
	chars_length = 0;
	chars = new char [0];
}


MyString& MyString::operator= (const MyString& model)
{
	MyString* output = new MyString(model);
	return *output;
}


// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
